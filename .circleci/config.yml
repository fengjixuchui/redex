version: 2.1

# If you only want circle to run on direct commits to master, you can uncomment this out
# and uncomment the filters: *filter-only-master down below too
#
aliases:
 - &filter-only-master
   branches:
     only:
       - master
 - &filter-not-gh-pages-not-master
   branches:
     ignore:
       - gh-pages
       - master

orbs:
  win: circleci/windows@2.2.0

commands:
  build-and-test-w-make:
    description: "Prepare, build and test ReDex"
    parameters:
      configure_extra:
        default: ""
        type: string
    steps:
      # Setup. Includes boost.
      - run:
          name: Setup
          command: |
            sudo ./setup_oss_toolchain.sh

      # For testing, need additional dependencies not provided by the image.
      - run:
          name: Setup for tests
          command: |
            sudo apt-get install -y --no-install-recommends dalvik-exchange default-jdk-headless
            sudo ln -s /usr/bin/dalvik-exchange /usr/local/bin/dx

      # Configure.
      - run:
          name: Configure
          command: |
            autoreconf -ivf
            ./configure << parameters.configure_extra >>

      # Actual build.
      - run:
          name: Build
          # The old Travis limit. Hopefully ensures GCC does
          # not die.
          command: |
            make -j4

      # Build & run tests.
      - run:
          name: Build tests
          command: |
            make -j4 check TESTS=
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-results
            export GTEST_OUTPUT=xml:/tmp/test-results/
            make -j4 check
      - store_test_results:
          path: /tmp/test-results

jobs:
  build-16_04:
    docker:
      - image: circleci/buildpack-deps:xenial
    # GCC is hungry.
    resource_class: large
    # Tell everyone we're using GCC 5.
    environment:
      CXX: g++-5
    steps:
      - checkout
      - build-and-test-w-make:
          configure_extra: "CXX='g++-5'"

  build-20_04:
    docker:
      - image: circleci/buildpack-deps:focal
    # GCC is hungry.
    resource_class: large
    steps:
      - checkout
      - build-and-test-w-make

  build-deb_stable:
    docker:
      - image: circleci/buildpack-deps:stable
    # GCC is hungry.
    resource_class: large
    steps:
      - checkout
      - build-and-test-w-make

  build-deb_testing:
    docker:
      - image: circleci/buildpack-deps:testing
    # GCC is hungry.
    resource_class: large
    steps:
      - checkout
      - build-and-test-w-make

  build-windows:
    executor:
      name: win/default
      # GCC is hungry.
      size: "large"

    steps:
      - checkout

      - run:
          name: Install MSYS2
          shell: bash.exe
          command: choco install msys2 -y
      - run:
          name: Update MSYS2 package DB
          shell: c:/tools/msys64/msys2_shell.cmd -defterm -no-start -msys2 -full-path -here -c
          command: pacman -Syuu --noconfirm
      - run:
          name: Setup
          shell: c:/tools/msys64/msys2_shell.cmd -defterm -no-start -msys2 -full-path -here -c
          command: pacman -S --needed --noconfirm make mingw-w64-x86_64-boost mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc mingw-w64-x86_64-jsoncpp mingw-w64-x86_64-make

      - run:
          name: Build
          shell: c:/tools/msys64/msys2_shell.cmd -defterm -no-start -mingw64 -full-path -here -c
          command: mkdir build && cd build && cmake -G "MSYS Makefiles" .. && make -j 4

      - run:
          name: Minimal Test
          # Using bash because somehow piping does not seem to work correctly with cmd.
          shell: bash.exe
          command: 'build/redex-all --show-passes | grep -E "Registered passes: [1-9][0-9]*"'

  deploy-website:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11.1

    steps:
      - checkout
      - run:
          name: Deploying to GitHub Pages
          command: |
            git config --global user.email "docusaurus-bot@users.noreply.github.com"
            git config --global user.name "Website Deployment Script"
            echo "machine github.com login docusaurus-bot password $DOCUSAURUS_GITHUB_TOKEN" > ~/.netrc
            echo "Deploying website..."
            unset CI_PULL_REQUEST CIRCLE_PULL_REQUEST
            cd website && yarn install && GIT_USER=docusaurus-bot USE_SSH=false yarn run publish-gh-pages

# TODO: branch filtering is deprecated, but workflow filtering documentation
#       for 2.1 does not exist and 2.0 requires a schedule.

workflows:
  version: 2.1
  build_master:
    jobs:
      - build-16_04:
          filters: *filter-only-master
      - build-windows:
          filters: *filter-only-master

      - deploy-website:
          filters: *filter-only-master

  build_other:
    jobs:
      # Note: only filter gh-pages for 'build_other' so that pull
      #       requests/stable get checked.
      - build-16_04:
          filters: *filter-not-gh-pages-not-master
      - build-20_04:
          filters: *filter-not-gh-pages-not-master
      - build-deb_stable:
          filters: *filter-not-gh-pages-not-master
      - build-deb_testing:
          filters: *filter-not-gh-pages-not-master
      - build-windows:
          filters: *filter-not-gh-pages-not-master

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters: *filter-only-master
    jobs:
      - build-20_04
      - build-deb_stable
      - build-deb_testing
